{"version":3,"file":"static/js/HomeView.d3fb7739.chunk.js","mappings":"2LACA,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA6F,yBAA7F,EAA6H,yB,SC6B7H,EAzBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACpB,OACE,oBAASC,UAAWC,EAApB,UACE,eAAID,UAAWC,EAAf,SACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,eAAaJ,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAaI,GAAE,kBAAaD,GAA7C,SACGD,KAFIC,Y,iECTnB,EAAwB,qB,SCWxB,EARc,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACf,OAAO,eAAIH,UAAWC,EAAf,SAA8BE,M,oKCJ1BG,EAAU,mCCDVC,EAAc,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAAQR,KAAI,kBAAoB,CAAEC,MAAtB,EAAGA,MAA0BC,GAA7B,EAAUA,QCI3DO,E,MAASC,GAAAA,OAAa,CAAEC,QFJN,iCEMXC,EAAc,kBACzBH,EAAOI,IAAP,uCAA2CT,EAA3C,cAA+DU,KAAKT,IAEzDU,EAAmB,SAAAC,GAAK,OACnCP,EAAOI,IAAP,gCAAoCT,EAApC,2BAA8DY,IAASF,KAAKT,IAEjEY,EAAkB,SAAAf,GAAE,OAC/BO,EACGI,IADH,iBACiBX,EADjB,oBAC+BE,IAC5BU,MAAK,SAAAR,GAAG,OAAIA,EAAIC,QAChBO,MAAK,kBAA6D,CACjEb,MADI,EAAGA,MAEPiB,YAFI,EAAUA,YAGdC,aAHI,EAAuBA,aAI3BC,SAJI,EAAqCA,SAKzCC,OALI,EAA+CA,YAQ5CC,EAAc,SAAApB,GAAE,OAC3BO,EAAOI,IAAP,iBAAqBX,EAArB,4BAA2CE,IAAWU,MAAK,SAAAR,GAAG,OAC5DA,EAAIC,KAAKgB,KAAKvB,KAAI,kBAAqD,CACrEE,GADgB,EAAGA,GAEnBsB,aAFgB,EAAOA,aAGvBC,cAHgB,EAAqBA,cAIrCC,UAJgB,EAAoCA,kBAQ7CC,EAAiB,SAAAzB,GAAE,OAC9BO,EACGI,IADH,gBACgBX,EADhB,4BACsCE,IACnCU,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAKC,QAAQR,KAAI,kBAA8B,CAAEE,GAAhC,EAAGA,GAAiC0B,OAApC,EAAOA,OAAqCC,QAA5C,EAAeA,iB,oJCfrD,EAjBiB,WACf,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAY,EAKhB,OAJAtB,EAAAA,EAAAA,MACGE,MAAK,SAAAP,GAAI,OAAK2B,GAAaF,EAAYzB,MACvC4B,OAAM,kBAAMC,EAAAA,OAAAA,QAAe,4BAEvB,WACLF,GAAY,KAEb,KAEI,SAACG,EAAA,EAAD,CAAYxC,OAAQkC,KCC7B,EAfiB,WACf,IAAQO,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SAMR,OAJAL,EAAAA,EAAAA,YAAU,WACRK,EAAS,MACR,KAGD,iCACE,SAACG,EAAA,EAAD,CAAOxC,MAAM,oBACb,SAAC,EAAD","sources":["webpack://goit-react-hw-05-movies/./src/Components/MoviesList/moviesList.module.css?db83","Components/MoviesList/MoviesList.js","webpack://goit-react-hw-05-movies/./src/Components/Title/title.module.css?496c","Components/Title/Title.js","api/constants.js","api/helpers.js","api/api.js","Components/Trending/Trending.js","views/HomeView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"moviesList_section__CjbMR\",\"list\":\"moviesList_list__FswJ0\",\"item\":\"moviesList_item__7pkNG\",\"link\":\"moviesList_link__tMBig\"};","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from './moviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <section className={styles.section}>\n      <ul className={styles.list}>\n        {movies.map(({ title, id }) => (\n          <li key={id} className={styles.item}>\n            <Link className={styles.link} to={`/movies/${id}`}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__i5H8-\"};","import { PropTypes } from 'prop-types';\nimport React from 'react';\nimport styles from './title.module.css';\n\nconst Title = ({ title }) => {\n  return <h2 className={styles.title}>{title}</h2>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '00c472f82d652f98226df4fa5a96b4f6';\n","export const getListData = res => res.data.results.map(({ title, id }) => ({ title, id }));\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './constants';\nimport { getListData } from './helpers';\n\nconst _axios = axios.create({ baseURL: BASE_URL });\n\nexport const getTrending = () =>\n  _axios.get(`/trending/movie/week?api_key=${API_KEY}&limit=20`).then(getListData);\n\nexport const getMoviesByQuery = query =>\n  _axios.get(`/search/movie?api_key=${API_KEY}&limit=20&query=${query}`).then(getListData);\n\nexport const getMovieDetails = id =>\n  _axios\n    .get(`/movie/${id}?api_key=${API_KEY}`)\n    .then(res => res.data)\n    .then(({ title, poster_path, vote_average, overview, genres }) => ({\n      title,\n      poster_path,\n      vote_average,\n      overview,\n      genres,\n    }));\n\nexport const getCastInfo = id =>\n  _axios.get(`/movie/${id}/credits?api_key=${API_KEY}`).then(res =>\n    res.data.cast.map(({ id, profile_path, original_name, character }) => ({\n      id,\n      profile_path,\n      original_name,\n      character,\n    })),\n  );\n\nexport const getReviewsInfo = id =>\n  _axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(res => res.data.results.map(({ id, author, content }) => ({ id, author, content })));\n","import { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getTrending } from '../../api/api';\nimport MoviesList from '../MoviesList/MoviesList';\n\nconst Trending = () => {\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    let cancelled = false;\n    getTrending()\n      .then(data => !cancelled && setTrending(data))\n      .catch(() => Notify.failure('Something went wrong!'));\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return <MoviesList movies={trending} />;\n};\n\nexport default Trending;\n","import React, { useContext, useEffect } from 'react';\nimport { QueryContext } from '../Components/App';\nimport Title from '../Components/Title';\nimport Trending from '../Components/Trending';\n\nconst HomeView = () => {\n  const { setQuery } = useContext(QueryContext);\n\n  useEffect(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <Title title=\"Trending today\" />\n      <Trending />\n    </>\n  );\n};\n\nexport default HomeView;\n"],"names":["movies","className","styles","map","title","id","to","API_KEY","getListData","res","data","results","_axios","axios","baseURL","getTrending","get","then","getMoviesByQuery","query","getMovieDetails","poster_path","vote_average","overview","genres","getCastInfo","cast","profile_path","original_name","character","getReviewsInfo","author","content","useState","trending","setTrending","useEffect","cancelled","catch","Notify","MoviesList","setQuery","useContext","QueryContext","Title"],"sourceRoot":""}